cluster关键点

启动过程
initServer()会调用clusterInit()函数,进行本节点cluster的初始化工作:
a. 初始化自身clusternode等相关内存/字段/链表等结构体;
b. 创建/只读方式打开本地配置文件,用于加独占锁,如果加锁失败,则进程整体退出;此处故意泄露文件句柄,以保证文件锁一直被进程持有;
c. 打开本地配置文件,读取配置数据.
	如果配置文件为空,则在内存构建一个自身节点,并立即将此数据强刷保存到本地磁盘;
	如果配置文件不为空,则解析配置数据构建clusterNode字典里的数据,并同步建立主备关系,以及确认自身节点所记录的currentEpoch集群纪元为所有节点configEpoch的最大值.
	此处有一个技术细节:为保证配置文件可以原子性的刷入到磁盘文件中,以避免进程被杀or服务器crash导致可能出现配置数据部分更新的问题.这里采用的是一次性统一替换磁盘数据,即:在内存里构造全部的配置数据,如果新数据的长度小于磁盘文件大小,则内存数据的尾部填充'/n',以保证内存里的新数据长度>=磁盘文件大小,再调用write函数一次性写入磁盘.对于可能出现short write的情况,则直接进程退出.如果正常,再调用ftruncate配置文件至合适的长度,以去掉可能存在的尾部填充'/n'符合.
d. 校验redis的客户端口号+10000是否在65535之内,以确保在构建监听cluster通信套接字时的端口号没有越界.
e. 将创建的cluster通信套接字注册到reactor分发器中,并指定回调函数:clusterAcceptHandler
f. 初始化slot->key的映射内存,重置mf手工迁移所用的内存数据;
g. 对于配置文件中设置的announce_port与announce_bus_port,修改mysql节点里记录的port与cport


reactor处理定时任务/文件句柄之前的clusterBeforeSleep逻辑
主要时异步执行一些在上一次执行过程中标记的异步任务
a. 备节点故障迁移工作;
b. 更新计算自身所记录的集群状态信息;
c. 执行保存配置文件并进行阻塞式的刷盘操作;